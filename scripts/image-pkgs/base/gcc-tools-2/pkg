<pkg>
gcc-4.8.2
</pkg>

<mpfr-ver>mpfr-3.1.2</mpfr-ver>
<gmp-ver>gmp-5.1.3</gmp-ver>
<mpc-ver>mpc-1.0.2</mpc-ver>
<cloog-ver>cloog-0.18.1</cloog-ver>
<isl-ver>isl-0.12.2</isl-ver>

<sources>
http://ftp.gnu.org/gnu/gcc/$<pkg/>/$<pkg/>.tar.bz2
http://ftp.gnu.org/gnu/gmp/$<gmp-ver/>.tar.xz
http://www.mpfr.org/$<mpfr-ver/>/$<mpfr-ver/>.tar.xz
http://www.multiprecision.org/mpc/download/$<mpc-ver/>.tar.gz
ftp://gcc.gnu.org/pub/gcc/infrastructure/$<cloog-ver/>.tar.gz
ftp://gcc.gnu.org/pub/gcc/infrastructure/$<isl-ver/>.tar.bz2
</sources>

<extract>all</extract>

<builddir>yes</builddir>

<pre>
mv $<mpfr-ver/> $<pkg/>/mpfr
mv $<mpc-ver/> $<pkg/>/mpc
mv $<gmp-ver/> $<pkg/>/gmp
mv $<cloog-ver/> $<pkg/>/cloog
mv $<isl-ver/> $<pkg/>/isl

cd $<pkg/>

cat gcc/limitx.h gcc/glimits.h gcc/limity.h > $(dirname $($<target/>-gcc -print-libgcc-file-name))/include-fixed/limits.h

case $(uname -m) in
    i?86) sed -i 's/^T_CFLAGS =$/& -fomit-frame-pointer/' gcc/Makefile.in ;;
esac

for FILE in $(find gcc/config -name linux64.h -o -name linux.h -o -name sysv4.h) ; do
    cp -uv $FILE{,.orig}
    sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
        -e 's@/usr@/tools@g' $FILE.orig > $FILE
    echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $FILE
    touch $FILE.orig
done
</pre>

<build>
CC=$<target/>-gcc \
CXX=$<target/>-g++ \
AR=$<target/>-ar \
RANLIB=$<target/>-ranlib \
../$<pkg/>/configure \
    --prefix=/tools \
    --with-local-prefix=/tools \
    --with-native-system-header-dir=/tools/include \
    --enable-clocale=gnu \
    --disable-shared \
    --enable-threads=posix \
    --enable-__cxa_atexit \
    --enable-languages=c,c++ \
    --disable-libstdcxx-pch \
    --disable-multilib \
    --disable-bootstrap \
    --disable-libgomp \
    --with-mpfr-include=$(pwd)/../$<pkg/>/mpfr/src \
    --with-mpfr-lib=$(pwd)/mpfr/src/.libs || exit 1

make -j$<jobs/> || exit 1

make install || exit 1

ln -sv gcc /tools/bin/cc

echo 'main(){}' > dummy.c
cc dummy.c || exit 1
[ "$(readelf -l a.out | grep ': /tools')" == "[Requesting program interpreter: /tools/lib/ld-linux.so.2]" ] || exit 1

rm -v dummy.c a.out
</build>
